package tests;

import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import utilities.InFile;
import utilities.OutFile;

public class GetTabCols
{
	public static void main(String args[])
	{
		File headerFile = new File("resources\\columnNames.txt");
		
		String basePath = "C:\\Users\\Robbie\\Documents\\dissertation\\Data\\elections";
		File[] tabFiles = new File(basePath + "\\EDAD").listFiles(new FilenameFilter()
			{
				public boolean accept(File dir, String name)
				{
					return name.endsWith(".tab");
				}
			});
		
		InFile in = null;
		ArrayList<String> cols = new ArrayList<String>();
		ArrayList<String> outArray = new ArrayList<String>();
		String line;
		String[] headerArr, lineArr, outArr;
		HashMap<String, Integer> outputMap = new HashMap<String, Integer>();
		HashMap<String, Integer> inputMap = new HashMap<String, Integer>();
		int index = 0;
		int offset = 0;
		
		try
		{
			OutFile out = new OutFile(basePath + "\\edadCombined.txt", false);
			in = new InFile(headerFile);
			while ((line = in.readLine()) != null)
			{
				outputMap.put(line, index);
				cols.add(line);
				index++;
			}
			out.writeRow(cols.toArray(), "\t", "YYYY");
			System.out.println(cols.size());
			//For getting initial columnNames.txt file.
//			for (String piece : line)
//			{
//				if (piece.matches("^g\\d{4}_.*"))
//					piece = "gYYYY" + piece.substring(5);
//				if (piece.matches("^r\\d{4}_.*"))
//					piece = "rYYYY" + piece.substring(5);
//				
//				if (!cols.contains(piece))
//					cols.add(piece);
//			}
			
//			for (File f : tabFiles)
//			{
				in = new InFile(tabFiles[0]);
				headerArr = in.readRowLite("\t");
				//System.out.println("Headers:");
				for (int i = 0; i < headerArr.length; i++)
				{
					if (headerArr[i].matches("^g\\d{4}_.*"))
						headerArr[i] = "gYYYY" + headerArr[i].substring(5);
					if (headerArr[i].matches("^r\\d{4}_.*"))
						headerArr[i] = "rYYYY" + headerArr[i].substring(5);
					
					if (cols.contains(headerArr[i]))
						inputMap.put(headerArr[i], i);
					else
						inputMap.put(headerArr[i], -1);
					//System.out.println(inputMap.get(headerArr[i]) + ": " + headerArr[i]);
				}
				
				while ((lineArr = in.readRowLite("\t")) != null)
				{
				//lineArr = in.readRowLite("\t");
					offset = 0;
					int i = 0;
					while (i < lineArr.length || i+offset < cols.size())
					{
						if (inputMap.containsKey(cols.get(i + offset)))
						{
							if (inputMap.get(cols.get(i + offset)) != -1)
								outArray.add(lineArr[i]);
							i++;
						}
						else
						{
							outArray.add("");
							offset++;
						}
					}
					
//					for (String header : outputMap.keySet())
//					{
//						if (outArray.size() >= outputMap.get(header))
//							outArray.add(outputMap.get(header), "");
//						//else if (outArray.get(outputMap.get(header)))
//							
//							
//					}
					//System.out.println(outArray.size() + "; " + i + "; " + offset);
					out.writeRow(outArray.toArray(), "\t");
				}
//			}
			
			out.close();
		}
		catch (IOException e)
		{
			e.printStackTrace();
		}
		
//		for (String col : cols)
//			System.out.println(col);
	}
}
